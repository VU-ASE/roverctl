name: Build and Release Binary

on:
  release:
    types: [published]

jobs:
  build:
    name: Build Binaries
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21.6'

      - name: Set VERSION from tag
        run: echo "VERSION=${GITHUB_REF_NAME}" >> $GITHUB_ENV

      - name: Build binaries for all platforms
        env:
          VERSION: ${{ env.VERSION }}
        run: |
          BUILD_DIR=bin/
          BINARY_NAME=roverctl
          LDFLAGS="-X 'github.com/VU-ASE/rover/src/views.version=${VERSION}'"
          mkdir -p $BUILD_DIR

          # Build for macOS Intel
          GOOS=darwin GOARCH=amd64 go build -buildvcs=false -ldflags="$LDFLAGS" -o "$BUILD_DIR${BINARY_NAME}-macos-amd64"

          # Build for macOS Silicon
          GOOS=darwin GOARCH=arm64 go build -buildvcs=false -ldflags="$LDFLAGS" -o "$BUILD_DIR${BINARY_NAME}-macos-arm64"

          # Build for Linux AMD64
          GOOS=linux GOARCH=amd64 go build -buildvcs=false -ldflags="$LDFLAGS" -o "$BUILD_DIR${BINARY_NAME}-linux-amd64"

          # Build for Linux ARM64
          GOOS=linux GOARCH=arm64 go build -buildvcs=false -ldflags="$LDFLAGS" -o "$BUILD_DIR${BINARY_NAME}-linux-arm64"

      - name: Upload binaries
        uses: actions/upload-artifact@v3
        with:
          name: binaries
          path: bin/

  upload-release-assets:
    name: Upload Release Assets
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: binaries

      - name: Upload assets to release
        uses: actions/upload-release-asset@v1
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          release_id: ${{ github.event.release.id }}
          asset_path: ./bin/
          asset_name: "${{ github.event.release.tag_name }}-assets.zip"
          asset_content_type: application/zip
