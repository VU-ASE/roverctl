/*
roverd REST API

API exposed from each rover to allow process, service, source and file management

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ServicesNameVersionGet200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServicesNameVersionGet200Response{}

// ServicesNameVersionGet200Response struct for ServicesNameVersionGet200Response
type ServicesNameVersionGet200Response struct {
	// The name of the service
	Name *string `json:"name,omitempty"`
	// The version of the service
	Version *string `json:"version,omitempty"`
	Status *ServiceStatus `json:"status,omitempty"`
	// The time this version was last built as milliseconds since epoch
	BuiltAt *int64 `json:"built_at,omitempty"`
	// The author of the service
	Author *string `json:"author,omitempty"`
	// The dependencies/inputs of this service version
	Inputs []ServicesNameVersionGet200ResponseInputsInner `json:"inputs,omitempty"`
	// The output streams of this service version
	Outputs []string `json:"outputs,omitempty"`
	// The validation errors of this service version (one error per line)
	Errors []string `json:"errors,omitempty"`
}

// NewServicesNameVersionGet200Response instantiates a new ServicesNameVersionGet200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServicesNameVersionGet200Response() *ServicesNameVersionGet200Response {
	this := ServicesNameVersionGet200Response{}
	return &this
}

// NewServicesNameVersionGet200ResponseWithDefaults instantiates a new ServicesNameVersionGet200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServicesNameVersionGet200ResponseWithDefaults() *ServicesNameVersionGet200Response {
	this := ServicesNameVersionGet200Response{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ServicesNameVersionGet200Response) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServicesNameVersionGet200Response) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ServicesNameVersionGet200Response) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ServicesNameVersionGet200Response) SetName(v string) {
	o.Name = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *ServicesNameVersionGet200Response) GetVersion() string {
	if o == nil || IsNil(o.Version) {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServicesNameVersionGet200Response) GetVersionOk() (*string, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *ServicesNameVersionGet200Response) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *ServicesNameVersionGet200Response) SetVersion(v string) {
	o.Version = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ServicesNameVersionGet200Response) GetStatus() ServiceStatus {
	if o == nil || IsNil(o.Status) {
		var ret ServiceStatus
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServicesNameVersionGet200Response) GetStatusOk() (*ServiceStatus, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ServicesNameVersionGet200Response) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given ServiceStatus and assigns it to the Status field.
func (o *ServicesNameVersionGet200Response) SetStatus(v ServiceStatus) {
	o.Status = &v
}

// GetBuiltAt returns the BuiltAt field value if set, zero value otherwise.
func (o *ServicesNameVersionGet200Response) GetBuiltAt() int64 {
	if o == nil || IsNil(o.BuiltAt) {
		var ret int64
		return ret
	}
	return *o.BuiltAt
}

// GetBuiltAtOk returns a tuple with the BuiltAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServicesNameVersionGet200Response) GetBuiltAtOk() (*int64, bool) {
	if o == nil || IsNil(o.BuiltAt) {
		return nil, false
	}
	return o.BuiltAt, true
}

// HasBuiltAt returns a boolean if a field has been set.
func (o *ServicesNameVersionGet200Response) HasBuiltAt() bool {
	if o != nil && !IsNil(o.BuiltAt) {
		return true
	}

	return false
}

// SetBuiltAt gets a reference to the given int64 and assigns it to the BuiltAt field.
func (o *ServicesNameVersionGet200Response) SetBuiltAt(v int64) {
	o.BuiltAt = &v
}

// GetAuthor returns the Author field value if set, zero value otherwise.
func (o *ServicesNameVersionGet200Response) GetAuthor() string {
	if o == nil || IsNil(o.Author) {
		var ret string
		return ret
	}
	return *o.Author
}

// GetAuthorOk returns a tuple with the Author field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServicesNameVersionGet200Response) GetAuthorOk() (*string, bool) {
	if o == nil || IsNil(o.Author) {
		return nil, false
	}
	return o.Author, true
}

// HasAuthor returns a boolean if a field has been set.
func (o *ServicesNameVersionGet200Response) HasAuthor() bool {
	if o != nil && !IsNil(o.Author) {
		return true
	}

	return false
}

// SetAuthor gets a reference to the given string and assigns it to the Author field.
func (o *ServicesNameVersionGet200Response) SetAuthor(v string) {
	o.Author = &v
}

// GetInputs returns the Inputs field value if set, zero value otherwise.
func (o *ServicesNameVersionGet200Response) GetInputs() []ServicesNameVersionGet200ResponseInputsInner {
	if o == nil || IsNil(o.Inputs) {
		var ret []ServicesNameVersionGet200ResponseInputsInner
		return ret
	}
	return o.Inputs
}

// GetInputsOk returns a tuple with the Inputs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServicesNameVersionGet200Response) GetInputsOk() ([]ServicesNameVersionGet200ResponseInputsInner, bool) {
	if o == nil || IsNil(o.Inputs) {
		return nil, false
	}
	return o.Inputs, true
}

// HasInputs returns a boolean if a field has been set.
func (o *ServicesNameVersionGet200Response) HasInputs() bool {
	if o != nil && !IsNil(o.Inputs) {
		return true
	}

	return false
}

// SetInputs gets a reference to the given []ServicesNameVersionGet200ResponseInputsInner and assigns it to the Inputs field.
func (o *ServicesNameVersionGet200Response) SetInputs(v []ServicesNameVersionGet200ResponseInputsInner) {
	o.Inputs = v
}

// GetOutputs returns the Outputs field value if set, zero value otherwise.
func (o *ServicesNameVersionGet200Response) GetOutputs() []string {
	if o == nil || IsNil(o.Outputs) {
		var ret []string
		return ret
	}
	return o.Outputs
}

// GetOutputsOk returns a tuple with the Outputs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServicesNameVersionGet200Response) GetOutputsOk() ([]string, bool) {
	if o == nil || IsNil(o.Outputs) {
		return nil, false
	}
	return o.Outputs, true
}

// HasOutputs returns a boolean if a field has been set.
func (o *ServicesNameVersionGet200Response) HasOutputs() bool {
	if o != nil && !IsNil(o.Outputs) {
		return true
	}

	return false
}

// SetOutputs gets a reference to the given []string and assigns it to the Outputs field.
func (o *ServicesNameVersionGet200Response) SetOutputs(v []string) {
	o.Outputs = v
}

// GetErrors returns the Errors field value if set, zero value otherwise.
func (o *ServicesNameVersionGet200Response) GetErrors() []string {
	if o == nil || IsNil(o.Errors) {
		var ret []string
		return ret
	}
	return o.Errors
}

// GetErrorsOk returns a tuple with the Errors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServicesNameVersionGet200Response) GetErrorsOk() ([]string, bool) {
	if o == nil || IsNil(o.Errors) {
		return nil, false
	}
	return o.Errors, true
}

// HasErrors returns a boolean if a field has been set.
func (o *ServicesNameVersionGet200Response) HasErrors() bool {
	if o != nil && !IsNil(o.Errors) {
		return true
	}

	return false
}

// SetErrors gets a reference to the given []string and assigns it to the Errors field.
func (o *ServicesNameVersionGet200Response) SetErrors(v []string) {
	o.Errors = v
}

func (o ServicesNameVersionGet200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServicesNameVersionGet200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.BuiltAt) {
		toSerialize["built_at"] = o.BuiltAt
	}
	if !IsNil(o.Author) {
		toSerialize["author"] = o.Author
	}
	if !IsNil(o.Inputs) {
		toSerialize["inputs"] = o.Inputs
	}
	if !IsNil(o.Outputs) {
		toSerialize["outputs"] = o.Outputs
	}
	if !IsNil(o.Errors) {
		toSerialize["errors"] = o.Errors
	}
	return toSerialize, nil
}

type NullableServicesNameVersionGet200Response struct {
	value *ServicesNameVersionGet200Response
	isSet bool
}

func (v NullableServicesNameVersionGet200Response) Get() *ServicesNameVersionGet200Response {
	return v.value
}

func (v *NullableServicesNameVersionGet200Response) Set(val *ServicesNameVersionGet200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableServicesNameVersionGet200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableServicesNameVersionGet200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServicesNameVersionGet200Response(val *ServicesNameVersionGet200Response) *NullableServicesNameVersionGet200Response {
	return &NullableServicesNameVersionGet200Response{value: val, isSet: true}
}

func (v NullableServicesNameVersionGet200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServicesNameVersionGet200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


