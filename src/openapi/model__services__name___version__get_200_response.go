/*
roverd REST API

API exposed from each rover to allow process, service, source and file management

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ServicesNameVersionGet200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServicesNameVersionGet200Response{}

// ServicesNameVersionGet200Response struct for ServicesNameVersionGet200Response
type ServicesNameVersionGet200Response struct {
	// The name of the service
	Name string `json:"name"`
	// The version of the service
	Version string `json:"version"`
	Status ServiceStatus `json:"status"`
	// The time this version was last built as milliseconds since epoch
	BuiltAt int64 `json:"built_at"`
	// The author of the service
	Author string `json:"author"`
	// The dependencies/inputs of this service version
	Inputs []ServicesNameVersionGet200ResponseInputsInner `json:"inputs"`
	// The output streams of this service version
	Outputs []string `json:"outputs"`
	// The validation errors of this service version (one error per line)
	Errors []string `json:"errors"`
}

type _ServicesNameVersionGet200Response ServicesNameVersionGet200Response

// NewServicesNameVersionGet200Response instantiates a new ServicesNameVersionGet200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServicesNameVersionGet200Response(name string, version string, status ServiceStatus, builtAt int64, author string, inputs []ServicesNameVersionGet200ResponseInputsInner, outputs []string, errors []string) *ServicesNameVersionGet200Response {
	this := ServicesNameVersionGet200Response{}
	this.Name = name
	this.Version = version
	this.Status = status
	this.BuiltAt = builtAt
	this.Author = author
	this.Inputs = inputs
	this.Outputs = outputs
	this.Errors = errors
	return &this
}

// NewServicesNameVersionGet200ResponseWithDefaults instantiates a new ServicesNameVersionGet200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServicesNameVersionGet200ResponseWithDefaults() *ServicesNameVersionGet200Response {
	this := ServicesNameVersionGet200Response{}
	return &this
}

// GetName returns the Name field value
func (o *ServicesNameVersionGet200Response) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ServicesNameVersionGet200Response) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ServicesNameVersionGet200Response) SetName(v string) {
	o.Name = v
}

// GetVersion returns the Version field value
func (o *ServicesNameVersionGet200Response) GetVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Version
}

// GetVersionOk returns a tuple with the Version field value
// and a boolean to check if the value has been set.
func (o *ServicesNameVersionGet200Response) GetVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Version, true
}

// SetVersion sets field value
func (o *ServicesNameVersionGet200Response) SetVersion(v string) {
	o.Version = v
}

// GetStatus returns the Status field value
func (o *ServicesNameVersionGet200Response) GetStatus() ServiceStatus {
	if o == nil {
		var ret ServiceStatus
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *ServicesNameVersionGet200Response) GetStatusOk() (*ServiceStatus, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *ServicesNameVersionGet200Response) SetStatus(v ServiceStatus) {
	o.Status = v
}

// GetBuiltAt returns the BuiltAt field value
func (o *ServicesNameVersionGet200Response) GetBuiltAt() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.BuiltAt
}

// GetBuiltAtOk returns a tuple with the BuiltAt field value
// and a boolean to check if the value has been set.
func (o *ServicesNameVersionGet200Response) GetBuiltAtOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BuiltAt, true
}

// SetBuiltAt sets field value
func (o *ServicesNameVersionGet200Response) SetBuiltAt(v int64) {
	o.BuiltAt = v
}

// GetAuthor returns the Author field value
func (o *ServicesNameVersionGet200Response) GetAuthor() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Author
}

// GetAuthorOk returns a tuple with the Author field value
// and a boolean to check if the value has been set.
func (o *ServicesNameVersionGet200Response) GetAuthorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Author, true
}

// SetAuthor sets field value
func (o *ServicesNameVersionGet200Response) SetAuthor(v string) {
	o.Author = v
}

// GetInputs returns the Inputs field value
func (o *ServicesNameVersionGet200Response) GetInputs() []ServicesNameVersionGet200ResponseInputsInner {
	if o == nil {
		var ret []ServicesNameVersionGet200ResponseInputsInner
		return ret
	}

	return o.Inputs
}

// GetInputsOk returns a tuple with the Inputs field value
// and a boolean to check if the value has been set.
func (o *ServicesNameVersionGet200Response) GetInputsOk() ([]ServicesNameVersionGet200ResponseInputsInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Inputs, true
}

// SetInputs sets field value
func (o *ServicesNameVersionGet200Response) SetInputs(v []ServicesNameVersionGet200ResponseInputsInner) {
	o.Inputs = v
}

// GetOutputs returns the Outputs field value
func (o *ServicesNameVersionGet200Response) GetOutputs() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Outputs
}

// GetOutputsOk returns a tuple with the Outputs field value
// and a boolean to check if the value has been set.
func (o *ServicesNameVersionGet200Response) GetOutputsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Outputs, true
}

// SetOutputs sets field value
func (o *ServicesNameVersionGet200Response) SetOutputs(v []string) {
	o.Outputs = v
}

// GetErrors returns the Errors field value
func (o *ServicesNameVersionGet200Response) GetErrors() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Errors
}

// GetErrorsOk returns a tuple with the Errors field value
// and a boolean to check if the value has been set.
func (o *ServicesNameVersionGet200Response) GetErrorsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Errors, true
}

// SetErrors sets field value
func (o *ServicesNameVersionGet200Response) SetErrors(v []string) {
	o.Errors = v
}

func (o ServicesNameVersionGet200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServicesNameVersionGet200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	toSerialize["version"] = o.Version
	toSerialize["status"] = o.Status
	toSerialize["built_at"] = o.BuiltAt
	toSerialize["author"] = o.Author
	toSerialize["inputs"] = o.Inputs
	toSerialize["outputs"] = o.Outputs
	toSerialize["errors"] = o.Errors
	return toSerialize, nil
}

func (o *ServicesNameVersionGet200Response) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"version",
		"status",
		"built_at",
		"author",
		"inputs",
		"outputs",
		"errors",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varServicesNameVersionGet200Response := _ServicesNameVersionGet200Response{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varServicesNameVersionGet200Response)

	if err != nil {
		return err
	}

	*o = ServicesNameVersionGet200Response(varServicesNameVersionGet200Response)

	return err
}

type NullableServicesNameVersionGet200Response struct {
	value *ServicesNameVersionGet200Response
	isSet bool
}

func (v NullableServicesNameVersionGet200Response) Get() *ServicesNameVersionGet200Response {
	return v.value
}

func (v *NullableServicesNameVersionGet200Response) Set(val *ServicesNameVersionGet200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableServicesNameVersionGet200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableServicesNameVersionGet200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServicesNameVersionGet200Response(val *ServicesNameVersionGet200Response) *NullableServicesNameVersionGet200Response {
	return &NullableServicesNameVersionGet200Response{value: val, isSet: true}
}

func (v NullableServicesNameVersionGet200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServicesNameVersionGet200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


