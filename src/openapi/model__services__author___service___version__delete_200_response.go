/*
roverd REST API

API exposed from each rover to allow process, service, source and file management

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ServicesAuthorServiceVersionDelete200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServicesAuthorServiceVersionDelete200Response{}

// ServicesAuthorServiceVersionDelete200Response struct for ServicesAuthorServiceVersionDelete200Response
type ServicesAuthorServiceVersionDelete200Response struct {
	// Whether the pipeline was invalidated by this service deletion
	InvalidatedPipeline bool `json:"invalidated_pipeline"`
}

type _ServicesAuthorServiceVersionDelete200Response ServicesAuthorServiceVersionDelete200Response

// NewServicesAuthorServiceVersionDelete200Response instantiates a new ServicesAuthorServiceVersionDelete200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServicesAuthorServiceVersionDelete200Response(invalidatedPipeline bool) *ServicesAuthorServiceVersionDelete200Response {
	this := ServicesAuthorServiceVersionDelete200Response{}
	this.InvalidatedPipeline = invalidatedPipeline
	return &this
}

// NewServicesAuthorServiceVersionDelete200ResponseWithDefaults instantiates a new ServicesAuthorServiceVersionDelete200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServicesAuthorServiceVersionDelete200ResponseWithDefaults() *ServicesAuthorServiceVersionDelete200Response {
	this := ServicesAuthorServiceVersionDelete200Response{}
	return &this
}

// GetInvalidatedPipeline returns the InvalidatedPipeline field value
func (o *ServicesAuthorServiceVersionDelete200Response) GetInvalidatedPipeline() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.InvalidatedPipeline
}

// GetInvalidatedPipelineOk returns a tuple with the InvalidatedPipeline field value
// and a boolean to check if the value has been set.
func (o *ServicesAuthorServiceVersionDelete200Response) GetInvalidatedPipelineOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InvalidatedPipeline, true
}

// SetInvalidatedPipeline sets field value
func (o *ServicesAuthorServiceVersionDelete200Response) SetInvalidatedPipeline(v bool) {
	o.InvalidatedPipeline = v
}

func (o ServicesAuthorServiceVersionDelete200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServicesAuthorServiceVersionDelete200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["invalidated_pipeline"] = o.InvalidatedPipeline
	return toSerialize, nil
}

func (o *ServicesAuthorServiceVersionDelete200Response) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"invalidated_pipeline",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varServicesAuthorServiceVersionDelete200Response := _ServicesAuthorServiceVersionDelete200Response{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varServicesAuthorServiceVersionDelete200Response)

	if err != nil {
		return err
	}

	*o = ServicesAuthorServiceVersionDelete200Response(varServicesAuthorServiceVersionDelete200Response)

	return err
}

type NullableServicesAuthorServiceVersionDelete200Response struct {
	value *ServicesAuthorServiceVersionDelete200Response
	isSet bool
}

func (v NullableServicesAuthorServiceVersionDelete200Response) Get() *ServicesAuthorServiceVersionDelete200Response {
	return v.value
}

func (v *NullableServicesAuthorServiceVersionDelete200Response) Set(val *ServicesAuthorServiceVersionDelete200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableServicesAuthorServiceVersionDelete200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableServicesAuthorServiceVersionDelete200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServicesAuthorServiceVersionDelete200Response(val *ServicesAuthorServiceVersionDelete200Response) *NullableServicesAuthorServiceVersionDelete200Response {
	return &NullableServicesAuthorServiceVersionDelete200Response{value: val, isSet: true}
}

func (v NullableServicesAuthorServiceVersionDelete200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServicesAuthorServiceVersionDelete200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


