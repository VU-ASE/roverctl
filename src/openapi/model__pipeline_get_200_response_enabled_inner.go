/*
roverd REST API

API exposed from each rover to allow process, service, source and file management

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the PipelineGet200ResponseEnabledInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PipelineGet200ResponseEnabledInner{}

// PipelineGet200ResponseEnabledInner struct for PipelineGet200ResponseEnabledInner
type PipelineGet200ResponseEnabledInner struct {
	Service PipelineGet200ResponseEnabledInnerService `json:"service"`
	Process *PipelineGet200ResponseEnabledInnerProcess `json:"process,omitempty"`
}

type _PipelineGet200ResponseEnabledInner PipelineGet200ResponseEnabledInner

// NewPipelineGet200ResponseEnabledInner instantiates a new PipelineGet200ResponseEnabledInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPipelineGet200ResponseEnabledInner(service PipelineGet200ResponseEnabledInnerService) *PipelineGet200ResponseEnabledInner {
	this := PipelineGet200ResponseEnabledInner{}
	this.Service = service
	return &this
}

// NewPipelineGet200ResponseEnabledInnerWithDefaults instantiates a new PipelineGet200ResponseEnabledInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPipelineGet200ResponseEnabledInnerWithDefaults() *PipelineGet200ResponseEnabledInner {
	this := PipelineGet200ResponseEnabledInner{}
	return &this
}

// GetService returns the Service field value
func (o *PipelineGet200ResponseEnabledInner) GetService() PipelineGet200ResponseEnabledInnerService {
	if o == nil {
		var ret PipelineGet200ResponseEnabledInnerService
		return ret
	}

	return o.Service
}

// GetServiceOk returns a tuple with the Service field value
// and a boolean to check if the value has been set.
func (o *PipelineGet200ResponseEnabledInner) GetServiceOk() (*PipelineGet200ResponseEnabledInnerService, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Service, true
}

// SetService sets field value
func (o *PipelineGet200ResponseEnabledInner) SetService(v PipelineGet200ResponseEnabledInnerService) {
	o.Service = v
}

// GetProcess returns the Process field value if set, zero value otherwise.
func (o *PipelineGet200ResponseEnabledInner) GetProcess() PipelineGet200ResponseEnabledInnerProcess {
	if o == nil || IsNil(o.Process) {
		var ret PipelineGet200ResponseEnabledInnerProcess
		return ret
	}
	return *o.Process
}

// GetProcessOk returns a tuple with the Process field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PipelineGet200ResponseEnabledInner) GetProcessOk() (*PipelineGet200ResponseEnabledInnerProcess, bool) {
	if o == nil || IsNil(o.Process) {
		return nil, false
	}
	return o.Process, true
}

// HasProcess returns a boolean if a field has been set.
func (o *PipelineGet200ResponseEnabledInner) HasProcess() bool {
	if o != nil && !IsNil(o.Process) {
		return true
	}

	return false
}

// SetProcess gets a reference to the given PipelineGet200ResponseEnabledInnerProcess and assigns it to the Process field.
func (o *PipelineGet200ResponseEnabledInner) SetProcess(v PipelineGet200ResponseEnabledInnerProcess) {
	o.Process = &v
}

func (o PipelineGet200ResponseEnabledInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PipelineGet200ResponseEnabledInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["service"] = o.Service
	if !IsNil(o.Process) {
		toSerialize["process"] = o.Process
	}
	return toSerialize, nil
}

func (o *PipelineGet200ResponseEnabledInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"service",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPipelineGet200ResponseEnabledInner := _PipelineGet200ResponseEnabledInner{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPipelineGet200ResponseEnabledInner)

	if err != nil {
		return err
	}

	*o = PipelineGet200ResponseEnabledInner(varPipelineGet200ResponseEnabledInner)

	return err
}

type NullablePipelineGet200ResponseEnabledInner struct {
	value *PipelineGet200ResponseEnabledInner
	isSet bool
}

func (v NullablePipelineGet200ResponseEnabledInner) Get() *PipelineGet200ResponseEnabledInner {
	return v.value
}

func (v *NullablePipelineGet200ResponseEnabledInner) Set(val *PipelineGet200ResponseEnabledInner) {
	v.value = val
	v.isSet = true
}

func (v NullablePipelineGet200ResponseEnabledInner) IsSet() bool {
	return v.isSet
}

func (v *NullablePipelineGet200ResponseEnabledInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePipelineGet200ResponseEnabledInner(val *PipelineGet200ResponseEnabledInner) *NullablePipelineGet200ResponseEnabledInner {
	return &NullablePipelineGet200ResponseEnabledInner{value: val, isSet: true}
}

func (v NullablePipelineGet200ResponseEnabledInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePipelineGet200ResponseEnabledInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


