/*
roverd REST API

API exposed from each rover to allow process, service, source and file management

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ServicesNameVersionGet200ResponseInputsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServicesNameVersionGet200ResponseInputsInner{}

// ServicesNameVersionGet200ResponseInputsInner struct for ServicesNameVersionGet200ResponseInputsInner
type ServicesNameVersionGet200ResponseInputsInner struct {
	// The name of the service dependency
	Service *string `json:"service,omitempty"`
	// The streams of the service dependency
	Streams []string `json:"streams,omitempty"`
}

// NewServicesNameVersionGet200ResponseInputsInner instantiates a new ServicesNameVersionGet200ResponseInputsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServicesNameVersionGet200ResponseInputsInner() *ServicesNameVersionGet200ResponseInputsInner {
	this := ServicesNameVersionGet200ResponseInputsInner{}
	return &this
}

// NewServicesNameVersionGet200ResponseInputsInnerWithDefaults instantiates a new ServicesNameVersionGet200ResponseInputsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServicesNameVersionGet200ResponseInputsInnerWithDefaults() *ServicesNameVersionGet200ResponseInputsInner {
	this := ServicesNameVersionGet200ResponseInputsInner{}
	return &this
}

// GetService returns the Service field value if set, zero value otherwise.
func (o *ServicesNameVersionGet200ResponseInputsInner) GetService() string {
	if o == nil || IsNil(o.Service) {
		var ret string
		return ret
	}
	return *o.Service
}

// GetServiceOk returns a tuple with the Service field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServicesNameVersionGet200ResponseInputsInner) GetServiceOk() (*string, bool) {
	if o == nil || IsNil(o.Service) {
		return nil, false
	}
	return o.Service, true
}

// HasService returns a boolean if a field has been set.
func (o *ServicesNameVersionGet200ResponseInputsInner) HasService() bool {
	if o != nil && !IsNil(o.Service) {
		return true
	}

	return false
}

// SetService gets a reference to the given string and assigns it to the Service field.
func (o *ServicesNameVersionGet200ResponseInputsInner) SetService(v string) {
	o.Service = &v
}

// GetStreams returns the Streams field value if set, zero value otherwise.
func (o *ServicesNameVersionGet200ResponseInputsInner) GetStreams() []string {
	if o == nil || IsNil(o.Streams) {
		var ret []string
		return ret
	}
	return o.Streams
}

// GetStreamsOk returns a tuple with the Streams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServicesNameVersionGet200ResponseInputsInner) GetStreamsOk() ([]string, bool) {
	if o == nil || IsNil(o.Streams) {
		return nil, false
	}
	return o.Streams, true
}

// HasStreams returns a boolean if a field has been set.
func (o *ServicesNameVersionGet200ResponseInputsInner) HasStreams() bool {
	if o != nil && !IsNil(o.Streams) {
		return true
	}

	return false
}

// SetStreams gets a reference to the given []string and assigns it to the Streams field.
func (o *ServicesNameVersionGet200ResponseInputsInner) SetStreams(v []string) {
	o.Streams = v
}

func (o ServicesNameVersionGet200ResponseInputsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServicesNameVersionGet200ResponseInputsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Service) {
		toSerialize["service"] = o.Service
	}
	if !IsNil(o.Streams) {
		toSerialize["streams"] = o.Streams
	}
	return toSerialize, nil
}

type NullableServicesNameVersionGet200ResponseInputsInner struct {
	value *ServicesNameVersionGet200ResponseInputsInner
	isSet bool
}

func (v NullableServicesNameVersionGet200ResponseInputsInner) Get() *ServicesNameVersionGet200ResponseInputsInner {
	return v.value
}

func (v *NullableServicesNameVersionGet200ResponseInputsInner) Set(val *ServicesNameVersionGet200ResponseInputsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableServicesNameVersionGet200ResponseInputsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableServicesNameVersionGet200ResponseInputsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServicesNameVersionGet200ResponseInputsInner(val *ServicesNameVersionGet200ResponseInputsInner) *NullableServicesNameVersionGet200ResponseInputsInner {
	return &NullableServicesNameVersionGet200ResponseInputsInner{value: val, isSet: true}
}

func (v NullableServicesNameVersionGet200ResponseInputsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServicesNameVersionGet200ResponseInputsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


