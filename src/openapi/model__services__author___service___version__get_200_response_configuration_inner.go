/*
roverd REST API

API exposed from each rover to allow process, service, source and file management

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ServicesAuthorServiceVersionGet200ResponseConfigurationInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServicesAuthorServiceVersionGet200ResponseConfigurationInner{}

// ServicesAuthorServiceVersionGet200ResponseConfigurationInner struct for ServicesAuthorServiceVersionGet200ResponseConfigurationInner
type ServicesAuthorServiceVersionGet200ResponseConfigurationInner struct {
	// The name of the configuration value
	Name string `json:"name"`
	// The type of the configuration value
	Type string `json:"type"`
	Value ServicesAuthorServiceVersionGet200ResponseConfigurationInnerValue `json:"value"`
	// Whether this configuration value is tunable
	Tunable bool `json:"tunable"`
}

type _ServicesAuthorServiceVersionGet200ResponseConfigurationInner ServicesAuthorServiceVersionGet200ResponseConfigurationInner

// NewServicesAuthorServiceVersionGet200ResponseConfigurationInner instantiates a new ServicesAuthorServiceVersionGet200ResponseConfigurationInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServicesAuthorServiceVersionGet200ResponseConfigurationInner(name string, type_ string, value ServicesAuthorServiceVersionGet200ResponseConfigurationInnerValue, tunable bool) *ServicesAuthorServiceVersionGet200ResponseConfigurationInner {
	this := ServicesAuthorServiceVersionGet200ResponseConfigurationInner{}
	this.Name = name
	this.Type = type_
	this.Value = value
	this.Tunable = tunable
	return &this
}

// NewServicesAuthorServiceVersionGet200ResponseConfigurationInnerWithDefaults instantiates a new ServicesAuthorServiceVersionGet200ResponseConfigurationInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServicesAuthorServiceVersionGet200ResponseConfigurationInnerWithDefaults() *ServicesAuthorServiceVersionGet200ResponseConfigurationInner {
	this := ServicesAuthorServiceVersionGet200ResponseConfigurationInner{}
	return &this
}

// GetName returns the Name field value
func (o *ServicesAuthorServiceVersionGet200ResponseConfigurationInner) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ServicesAuthorServiceVersionGet200ResponseConfigurationInner) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ServicesAuthorServiceVersionGet200ResponseConfigurationInner) SetName(v string) {
	o.Name = v
}

// GetType returns the Type field value
func (o *ServicesAuthorServiceVersionGet200ResponseConfigurationInner) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *ServicesAuthorServiceVersionGet200ResponseConfigurationInner) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *ServicesAuthorServiceVersionGet200ResponseConfigurationInner) SetType(v string) {
	o.Type = v
}

// GetValue returns the Value field value
func (o *ServicesAuthorServiceVersionGet200ResponseConfigurationInner) GetValue() ServicesAuthorServiceVersionGet200ResponseConfigurationInnerValue {
	if o == nil {
		var ret ServicesAuthorServiceVersionGet200ResponseConfigurationInnerValue
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *ServicesAuthorServiceVersionGet200ResponseConfigurationInner) GetValueOk() (*ServicesAuthorServiceVersionGet200ResponseConfigurationInnerValue, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *ServicesAuthorServiceVersionGet200ResponseConfigurationInner) SetValue(v ServicesAuthorServiceVersionGet200ResponseConfigurationInnerValue) {
	o.Value = v
}

// GetTunable returns the Tunable field value
func (o *ServicesAuthorServiceVersionGet200ResponseConfigurationInner) GetTunable() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Tunable
}

// GetTunableOk returns a tuple with the Tunable field value
// and a boolean to check if the value has been set.
func (o *ServicesAuthorServiceVersionGet200ResponseConfigurationInner) GetTunableOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Tunable, true
}

// SetTunable sets field value
func (o *ServicesAuthorServiceVersionGet200ResponseConfigurationInner) SetTunable(v bool) {
	o.Tunable = v
}

func (o ServicesAuthorServiceVersionGet200ResponseConfigurationInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServicesAuthorServiceVersionGet200ResponseConfigurationInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	toSerialize["type"] = o.Type
	toSerialize["value"] = o.Value
	toSerialize["tunable"] = o.Tunable
	return toSerialize, nil
}

func (o *ServicesAuthorServiceVersionGet200ResponseConfigurationInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"type",
		"value",
		"tunable",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varServicesAuthorServiceVersionGet200ResponseConfigurationInner := _ServicesAuthorServiceVersionGet200ResponseConfigurationInner{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varServicesAuthorServiceVersionGet200ResponseConfigurationInner)

	if err != nil {
		return err
	}

	*o = ServicesAuthorServiceVersionGet200ResponseConfigurationInner(varServicesAuthorServiceVersionGet200ResponseConfigurationInner)

	return err
}

type NullableServicesAuthorServiceVersionGet200ResponseConfigurationInner struct {
	value *ServicesAuthorServiceVersionGet200ResponseConfigurationInner
	isSet bool
}

func (v NullableServicesAuthorServiceVersionGet200ResponseConfigurationInner) Get() *ServicesAuthorServiceVersionGet200ResponseConfigurationInner {
	return v.value
}

func (v *NullableServicesAuthorServiceVersionGet200ResponseConfigurationInner) Set(val *ServicesAuthorServiceVersionGet200ResponseConfigurationInner) {
	v.value = val
	v.isSet = true
}

func (v NullableServicesAuthorServiceVersionGet200ResponseConfigurationInner) IsSet() bool {
	return v.isSet
}

func (v *NullableServicesAuthorServiceVersionGet200ResponseConfigurationInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServicesAuthorServiceVersionGet200ResponseConfigurationInner(val *ServicesAuthorServiceVersionGet200ResponseConfigurationInner) *NullableServicesAuthorServiceVersionGet200ResponseConfigurationInner {
	return &NullableServicesAuthorServiceVersionGet200ResponseConfigurationInner{value: val, isSet: true}
}

func (v NullableServicesAuthorServiceVersionGet200ResponseConfigurationInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServicesAuthorServiceVersionGet200ResponseConfigurationInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


