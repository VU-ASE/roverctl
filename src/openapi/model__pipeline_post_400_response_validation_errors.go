/*
roverd REST API

API exposed from each rover to allow process, service, source and file management

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the PipelinePost400ResponseValidationErrors type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PipelinePost400ResponseValidationErrors{}

// PipelinePost400ResponseValidationErrors The validation errors that prevent the pipeline from being set
type PipelinePost400ResponseValidationErrors struct {
	UnmetStreams []UnmetStreamError `json:"unmet_streams,omitempty"`
	UnmetServices []UnmetServiceError `json:"unmet_services,omitempty"`
	DuplicateService []string `json:"duplicate_service,omitempty"`
}

// NewPipelinePost400ResponseValidationErrors instantiates a new PipelinePost400ResponseValidationErrors object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPipelinePost400ResponseValidationErrors() *PipelinePost400ResponseValidationErrors {
	this := PipelinePost400ResponseValidationErrors{}
	return &this
}

// NewPipelinePost400ResponseValidationErrorsWithDefaults instantiates a new PipelinePost400ResponseValidationErrors object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPipelinePost400ResponseValidationErrorsWithDefaults() *PipelinePost400ResponseValidationErrors {
	this := PipelinePost400ResponseValidationErrors{}
	return &this
}

// GetUnmetStreams returns the UnmetStreams field value if set, zero value otherwise.
func (o *PipelinePost400ResponseValidationErrors) GetUnmetStreams() []UnmetStreamError {
	if o == nil || IsNil(o.UnmetStreams) {
		var ret []UnmetStreamError
		return ret
	}
	return o.UnmetStreams
}

// GetUnmetStreamsOk returns a tuple with the UnmetStreams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PipelinePost400ResponseValidationErrors) GetUnmetStreamsOk() ([]UnmetStreamError, bool) {
	if o == nil || IsNil(o.UnmetStreams) {
		return nil, false
	}
	return o.UnmetStreams, true
}

// HasUnmetStreams returns a boolean if a field has been set.
func (o *PipelinePost400ResponseValidationErrors) HasUnmetStreams() bool {
	if o != nil && !IsNil(o.UnmetStreams) {
		return true
	}

	return false
}

// SetUnmetStreams gets a reference to the given []UnmetStreamError and assigns it to the UnmetStreams field.
func (o *PipelinePost400ResponseValidationErrors) SetUnmetStreams(v []UnmetStreamError) {
	o.UnmetStreams = v
}

// GetUnmetServices returns the UnmetServices field value if set, zero value otherwise.
func (o *PipelinePost400ResponseValidationErrors) GetUnmetServices() []UnmetServiceError {
	if o == nil || IsNil(o.UnmetServices) {
		var ret []UnmetServiceError
		return ret
	}
	return o.UnmetServices
}

// GetUnmetServicesOk returns a tuple with the UnmetServices field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PipelinePost400ResponseValidationErrors) GetUnmetServicesOk() ([]UnmetServiceError, bool) {
	if o == nil || IsNil(o.UnmetServices) {
		return nil, false
	}
	return o.UnmetServices, true
}

// HasUnmetServices returns a boolean if a field has been set.
func (o *PipelinePost400ResponseValidationErrors) HasUnmetServices() bool {
	if o != nil && !IsNil(o.UnmetServices) {
		return true
	}

	return false
}

// SetUnmetServices gets a reference to the given []UnmetServiceError and assigns it to the UnmetServices field.
func (o *PipelinePost400ResponseValidationErrors) SetUnmetServices(v []UnmetServiceError) {
	o.UnmetServices = v
}

// GetDuplicateService returns the DuplicateService field value if set, zero value otherwise.
func (o *PipelinePost400ResponseValidationErrors) GetDuplicateService() []string {
	if o == nil || IsNil(o.DuplicateService) {
		var ret []string
		return ret
	}
	return o.DuplicateService
}

// GetDuplicateServiceOk returns a tuple with the DuplicateService field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PipelinePost400ResponseValidationErrors) GetDuplicateServiceOk() ([]string, bool) {
	if o == nil || IsNil(o.DuplicateService) {
		return nil, false
	}
	return o.DuplicateService, true
}

// HasDuplicateService returns a boolean if a field has been set.
func (o *PipelinePost400ResponseValidationErrors) HasDuplicateService() bool {
	if o != nil && !IsNil(o.DuplicateService) {
		return true
	}

	return false
}

// SetDuplicateService gets a reference to the given []string and assigns it to the DuplicateService field.
func (o *PipelinePost400ResponseValidationErrors) SetDuplicateService(v []string) {
	o.DuplicateService = v
}

func (o PipelinePost400ResponseValidationErrors) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PipelinePost400ResponseValidationErrors) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.UnmetStreams) {
		toSerialize["unmet_streams"] = o.UnmetStreams
	}
	if !IsNil(o.UnmetServices) {
		toSerialize["unmet_services"] = o.UnmetServices
	}
	if !IsNil(o.DuplicateService) {
		toSerialize["duplicate_service"] = o.DuplicateService
	}
	return toSerialize, nil
}

type NullablePipelinePost400ResponseValidationErrors struct {
	value *PipelinePost400ResponseValidationErrors
	isSet bool
}

func (v NullablePipelinePost400ResponseValidationErrors) Get() *PipelinePost400ResponseValidationErrors {
	return v.value
}

func (v *NullablePipelinePost400ResponseValidationErrors) Set(val *PipelinePost400ResponseValidationErrors) {
	v.value = val
	v.isSet = true
}

func (v NullablePipelinePost400ResponseValidationErrors) IsSet() bool {
	return v.isSet
}

func (v *NullablePipelinePost400ResponseValidationErrors) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePipelinePost400ResponseValidationErrors(val *PipelinePost400ResponseValidationErrors) *NullablePipelinePost400ResponseValidationErrors {
	return &NullablePipelinePost400ResponseValidationErrors{value: val, isSet: true}
}

func (v NullablePipelinePost400ResponseValidationErrors) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePipelinePost400ResponseValidationErrors) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


