/*
roverd REST API

API exposed from each rover to allow process, service, source and file management

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SourcesGet200ResponseInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SourcesGet200ResponseInner{}

// SourcesGet200ResponseInner struct for SourcesGet200ResponseInner
type SourcesGet200ResponseInner struct {
	// The name of the source
	Name *string `json:"name,omitempty"`
	// The URL of the source (without scheme)
	Url *string `json:"url,omitempty"`
	Version *string `json:"version,omitempty"`
	// The SHA256 hash of the source download, computed over the ZIP file downloaded
	Sha *string `json:"sha,omitempty"`
}

// NewSourcesGet200ResponseInner instantiates a new SourcesGet200ResponseInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSourcesGet200ResponseInner() *SourcesGet200ResponseInner {
	this := SourcesGet200ResponseInner{}
	return &this
}

// NewSourcesGet200ResponseInnerWithDefaults instantiates a new SourcesGet200ResponseInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSourcesGet200ResponseInnerWithDefaults() *SourcesGet200ResponseInner {
	this := SourcesGet200ResponseInner{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *SourcesGet200ResponseInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SourcesGet200ResponseInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *SourcesGet200ResponseInner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *SourcesGet200ResponseInner) SetName(v string) {
	o.Name = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *SourcesGet200ResponseInner) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SourcesGet200ResponseInner) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *SourcesGet200ResponseInner) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *SourcesGet200ResponseInner) SetUrl(v string) {
	o.Url = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *SourcesGet200ResponseInner) GetVersion() string {
	if o == nil || IsNil(o.Version) {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SourcesGet200ResponseInner) GetVersionOk() (*string, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *SourcesGet200ResponseInner) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *SourcesGet200ResponseInner) SetVersion(v string) {
	o.Version = &v
}

// GetSha returns the Sha field value if set, zero value otherwise.
func (o *SourcesGet200ResponseInner) GetSha() string {
	if o == nil || IsNil(o.Sha) {
		var ret string
		return ret
	}
	return *o.Sha
}

// GetShaOk returns a tuple with the Sha field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SourcesGet200ResponseInner) GetShaOk() (*string, bool) {
	if o == nil || IsNil(o.Sha) {
		return nil, false
	}
	return o.Sha, true
}

// HasSha returns a boolean if a field has been set.
func (o *SourcesGet200ResponseInner) HasSha() bool {
	if o != nil && !IsNil(o.Sha) {
		return true
	}

	return false
}

// SetSha gets a reference to the given string and assigns it to the Sha field.
func (o *SourcesGet200ResponseInner) SetSha(v string) {
	o.Sha = &v
}

func (o SourcesGet200ResponseInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SourcesGet200ResponseInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	if !IsNil(o.Sha) {
		toSerialize["sha"] = o.Sha
	}
	return toSerialize, nil
}

type NullableSourcesGet200ResponseInner struct {
	value *SourcesGet200ResponseInner
	isSet bool
}

func (v NullableSourcesGet200ResponseInner) Get() *SourcesGet200ResponseInner {
	return v.value
}

func (v *NullableSourcesGet200ResponseInner) Set(val *SourcesGet200ResponseInner) {
	v.value = val
	v.isSet = true
}

func (v NullableSourcesGet200ResponseInner) IsSet() bool {
	return v.isSet
}

func (v *NullableSourcesGet200ResponseInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSourcesGet200ResponseInner(val *SourcesGet200ResponseInner) *NullableSourcesGet200ResponseInner {
	return &NullableSourcesGet200ResponseInner{value: val, isSet: true}
}

func (v NullableSourcesGet200ResponseInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSourcesGet200ResponseInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


