/*
roverd REST API

API exposed from each rover to allow process, service, source and file management

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the PipelineGet200ResponseProcessesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PipelineGet200ResponseProcessesInner{}

// PipelineGet200ResponseProcessesInner struct for PipelineGet200ResponseProcessesInner
type PipelineGet200ResponseProcessesInner struct {
	// The name of the service running as a process
	Name string `json:"name"`
	Status ProcessStatus `json:"status"`
	// The process ID
	Pid int32 `json:"pid"`
	// The number of milliseconds the process has been running
	Uptime int64 `json:"uptime"`
	// The amount of memory used by the process in megabytes
	Memory int32 `json:"memory"`
	// The percentage of CPU used by the process
	Cpu int32 `json:"cpu"`
	// The number of faults that have occurred (causing the pipeline to restart) since last_start
	Faults int32 `json:"faults"`
}

type _PipelineGet200ResponseProcessesInner PipelineGet200ResponseProcessesInner

// NewPipelineGet200ResponseProcessesInner instantiates a new PipelineGet200ResponseProcessesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPipelineGet200ResponseProcessesInner(name string, status ProcessStatus, pid int32, uptime int64, memory int32, cpu int32, faults int32) *PipelineGet200ResponseProcessesInner {
	this := PipelineGet200ResponseProcessesInner{}
	this.Name = name
	this.Status = status
	this.Pid = pid
	this.Uptime = uptime
	this.Memory = memory
	this.Cpu = cpu
	this.Faults = faults
	return &this
}

// NewPipelineGet200ResponseProcessesInnerWithDefaults instantiates a new PipelineGet200ResponseProcessesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPipelineGet200ResponseProcessesInnerWithDefaults() *PipelineGet200ResponseProcessesInner {
	this := PipelineGet200ResponseProcessesInner{}
	return &this
}

// GetName returns the Name field value
func (o *PipelineGet200ResponseProcessesInner) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *PipelineGet200ResponseProcessesInner) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *PipelineGet200ResponseProcessesInner) SetName(v string) {
	o.Name = v
}

// GetStatus returns the Status field value
func (o *PipelineGet200ResponseProcessesInner) GetStatus() ProcessStatus {
	if o == nil {
		var ret ProcessStatus
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *PipelineGet200ResponseProcessesInner) GetStatusOk() (*ProcessStatus, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *PipelineGet200ResponseProcessesInner) SetStatus(v ProcessStatus) {
	o.Status = v
}

// GetPid returns the Pid field value
func (o *PipelineGet200ResponseProcessesInner) GetPid() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Pid
}

// GetPidOk returns a tuple with the Pid field value
// and a boolean to check if the value has been set.
func (o *PipelineGet200ResponseProcessesInner) GetPidOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Pid, true
}

// SetPid sets field value
func (o *PipelineGet200ResponseProcessesInner) SetPid(v int32) {
	o.Pid = v
}

// GetUptime returns the Uptime field value
func (o *PipelineGet200ResponseProcessesInner) GetUptime() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Uptime
}

// GetUptimeOk returns a tuple with the Uptime field value
// and a boolean to check if the value has been set.
func (o *PipelineGet200ResponseProcessesInner) GetUptimeOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Uptime, true
}

// SetUptime sets field value
func (o *PipelineGet200ResponseProcessesInner) SetUptime(v int64) {
	o.Uptime = v
}

// GetMemory returns the Memory field value
func (o *PipelineGet200ResponseProcessesInner) GetMemory() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Memory
}

// GetMemoryOk returns a tuple with the Memory field value
// and a boolean to check if the value has been set.
func (o *PipelineGet200ResponseProcessesInner) GetMemoryOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Memory, true
}

// SetMemory sets field value
func (o *PipelineGet200ResponseProcessesInner) SetMemory(v int32) {
	o.Memory = v
}

// GetCpu returns the Cpu field value
func (o *PipelineGet200ResponseProcessesInner) GetCpu() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Cpu
}

// GetCpuOk returns a tuple with the Cpu field value
// and a boolean to check if the value has been set.
func (o *PipelineGet200ResponseProcessesInner) GetCpuOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Cpu, true
}

// SetCpu sets field value
func (o *PipelineGet200ResponseProcessesInner) SetCpu(v int32) {
	o.Cpu = v
}

// GetFaults returns the Faults field value
func (o *PipelineGet200ResponseProcessesInner) GetFaults() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Faults
}

// GetFaultsOk returns a tuple with the Faults field value
// and a boolean to check if the value has been set.
func (o *PipelineGet200ResponseProcessesInner) GetFaultsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Faults, true
}

// SetFaults sets field value
func (o *PipelineGet200ResponseProcessesInner) SetFaults(v int32) {
	o.Faults = v
}

func (o PipelineGet200ResponseProcessesInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PipelineGet200ResponseProcessesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	toSerialize["status"] = o.Status
	toSerialize["pid"] = o.Pid
	toSerialize["uptime"] = o.Uptime
	toSerialize["memory"] = o.Memory
	toSerialize["cpu"] = o.Cpu
	toSerialize["faults"] = o.Faults
	return toSerialize, nil
}

func (o *PipelineGet200ResponseProcessesInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"status",
		"pid",
		"uptime",
		"memory",
		"cpu",
		"faults",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPipelineGet200ResponseProcessesInner := _PipelineGet200ResponseProcessesInner{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPipelineGet200ResponseProcessesInner)

	if err != nil {
		return err
	}

	*o = PipelineGet200ResponseProcessesInner(varPipelineGet200ResponseProcessesInner)

	return err
}

type NullablePipelineGet200ResponseProcessesInner struct {
	value *PipelineGet200ResponseProcessesInner
	isSet bool
}

func (v NullablePipelineGet200ResponseProcessesInner) Get() *PipelineGet200ResponseProcessesInner {
	return v.value
}

func (v *NullablePipelineGet200ResponseProcessesInner) Set(val *PipelineGet200ResponseProcessesInner) {
	v.value = val
	v.isSet = true
}

func (v NullablePipelineGet200ResponseProcessesInner) IsSet() bool {
	return v.isSet
}

func (v *NullablePipelineGet200ResponseProcessesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePipelineGet200ResponseProcessesInner(val *PipelineGet200ResponseProcessesInner) *NullablePipelineGet200ResponseProcessesInner {
	return &NullablePipelineGet200ResponseProcessesInner{value: val, isSet: true}
}

func (v NullablePipelineGet200ResponseProcessesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePipelineGet200ResponseProcessesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


