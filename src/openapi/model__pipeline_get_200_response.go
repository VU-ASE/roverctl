/*
roverd REST API

API exposed from each rover to allow process, service, source and file management

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the PipelineGet200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PipelineGet200Response{}

// PipelineGet200Response struct for PipelineGet200Response
type PipelineGet200Response struct {
	Pipeline *PipelineGet200ResponsePipeline `json:"pipeline,omitempty"`
	Processes []PipelineGet200ResponseProcessesInner `json:"processes,omitempty"`
}

// NewPipelineGet200Response instantiates a new PipelineGet200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPipelineGet200Response() *PipelineGet200Response {
	this := PipelineGet200Response{}
	return &this
}

// NewPipelineGet200ResponseWithDefaults instantiates a new PipelineGet200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPipelineGet200ResponseWithDefaults() *PipelineGet200Response {
	this := PipelineGet200Response{}
	return &this
}

// GetPipeline returns the Pipeline field value if set, zero value otherwise.
func (o *PipelineGet200Response) GetPipeline() PipelineGet200ResponsePipeline {
	if o == nil || IsNil(o.Pipeline) {
		var ret PipelineGet200ResponsePipeline
		return ret
	}
	return *o.Pipeline
}

// GetPipelineOk returns a tuple with the Pipeline field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PipelineGet200Response) GetPipelineOk() (*PipelineGet200ResponsePipeline, bool) {
	if o == nil || IsNil(o.Pipeline) {
		return nil, false
	}
	return o.Pipeline, true
}

// HasPipeline returns a boolean if a field has been set.
func (o *PipelineGet200Response) HasPipeline() bool {
	if o != nil && !IsNil(o.Pipeline) {
		return true
	}

	return false
}

// SetPipeline gets a reference to the given PipelineGet200ResponsePipeline and assigns it to the Pipeline field.
func (o *PipelineGet200Response) SetPipeline(v PipelineGet200ResponsePipeline) {
	o.Pipeline = &v
}

// GetProcesses returns the Processes field value if set, zero value otherwise.
func (o *PipelineGet200Response) GetProcesses() []PipelineGet200ResponseProcessesInner {
	if o == nil || IsNil(o.Processes) {
		var ret []PipelineGet200ResponseProcessesInner
		return ret
	}
	return o.Processes
}

// GetProcessesOk returns a tuple with the Processes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PipelineGet200Response) GetProcessesOk() ([]PipelineGet200ResponseProcessesInner, bool) {
	if o == nil || IsNil(o.Processes) {
		return nil, false
	}
	return o.Processes, true
}

// HasProcesses returns a boolean if a field has been set.
func (o *PipelineGet200Response) HasProcesses() bool {
	if o != nil && !IsNil(o.Processes) {
		return true
	}

	return false
}

// SetProcesses gets a reference to the given []PipelineGet200ResponseProcessesInner and assigns it to the Processes field.
func (o *PipelineGet200Response) SetProcesses(v []PipelineGet200ResponseProcessesInner) {
	o.Processes = v
}

func (o PipelineGet200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PipelineGet200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Pipeline) {
		toSerialize["pipeline"] = o.Pipeline
	}
	if !IsNil(o.Processes) {
		toSerialize["processes"] = o.Processes
	}
	return toSerialize, nil
}

type NullablePipelineGet200Response struct {
	value *PipelineGet200Response
	isSet bool
}

func (v NullablePipelineGet200Response) Get() *PipelineGet200Response {
	return v.value
}

func (v *NullablePipelineGet200Response) Set(val *PipelineGet200Response) {
	v.value = val
	v.isSet = true
}

func (v NullablePipelineGet200Response) IsSet() bool {
	return v.isSet
}

func (v *NullablePipelineGet200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePipelineGet200Response(val *PipelineGet200Response) *NullablePipelineGet200Response {
	return &NullablePipelineGet200Response{value: val, isSet: true}
}

func (v NullablePipelineGet200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePipelineGet200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


