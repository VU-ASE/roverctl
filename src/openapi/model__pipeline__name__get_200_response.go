/*
roverd REST API

API exposed from each rover to allow process, service, source and file management

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the PipelineNameGet200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PipelineNameGet200Response{}

// PipelineNameGet200Response struct for PipelineNameGet200Response
type PipelineNameGet200Response struct {
	// The name of the service running as a process
	Name *string `json:"name,omitempty"`
	Status *ProcessStatus `json:"status,omitempty"`
	// The process ID
	Pid *int32 `json:"pid,omitempty"`
	// The number of milliseconds the process has been running
	Uptime *int64 `json:"uptime,omitempty"`
	// The amount of memory used by the process in megabytes
	Memory *int32 `json:"memory,omitempty"`
	// The percentage of CPU used by the process
	Cpu *int32 `json:"cpu,omitempty"`
	// The number of faults that have occurred (causing the pipeline to restart) since last_start
	Faults *int32 `json:"faults,omitempty"`
	// The name of the service that this process is running
	ServiceName *string `json:"service_name,omitempty"`
	// The version of the service that this process is running
	ServiceVersion *string `json:"service_version,omitempty"`
	// The latest <log_lines> log lines of the process
	Logs []string `json:"logs,omitempty"`
}

// NewPipelineNameGet200Response instantiates a new PipelineNameGet200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPipelineNameGet200Response() *PipelineNameGet200Response {
	this := PipelineNameGet200Response{}
	return &this
}

// NewPipelineNameGet200ResponseWithDefaults instantiates a new PipelineNameGet200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPipelineNameGet200ResponseWithDefaults() *PipelineNameGet200Response {
	this := PipelineNameGet200Response{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *PipelineNameGet200Response) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PipelineNameGet200Response) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *PipelineNameGet200Response) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *PipelineNameGet200Response) SetName(v string) {
	o.Name = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *PipelineNameGet200Response) GetStatus() ProcessStatus {
	if o == nil || IsNil(o.Status) {
		var ret ProcessStatus
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PipelineNameGet200Response) GetStatusOk() (*ProcessStatus, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *PipelineNameGet200Response) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given ProcessStatus and assigns it to the Status field.
func (o *PipelineNameGet200Response) SetStatus(v ProcessStatus) {
	o.Status = &v
}

// GetPid returns the Pid field value if set, zero value otherwise.
func (o *PipelineNameGet200Response) GetPid() int32 {
	if o == nil || IsNil(o.Pid) {
		var ret int32
		return ret
	}
	return *o.Pid
}

// GetPidOk returns a tuple with the Pid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PipelineNameGet200Response) GetPidOk() (*int32, bool) {
	if o == nil || IsNil(o.Pid) {
		return nil, false
	}
	return o.Pid, true
}

// HasPid returns a boolean if a field has been set.
func (o *PipelineNameGet200Response) HasPid() bool {
	if o != nil && !IsNil(o.Pid) {
		return true
	}

	return false
}

// SetPid gets a reference to the given int32 and assigns it to the Pid field.
func (o *PipelineNameGet200Response) SetPid(v int32) {
	o.Pid = &v
}

// GetUptime returns the Uptime field value if set, zero value otherwise.
func (o *PipelineNameGet200Response) GetUptime() int64 {
	if o == nil || IsNil(o.Uptime) {
		var ret int64
		return ret
	}
	return *o.Uptime
}

// GetUptimeOk returns a tuple with the Uptime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PipelineNameGet200Response) GetUptimeOk() (*int64, bool) {
	if o == nil || IsNil(o.Uptime) {
		return nil, false
	}
	return o.Uptime, true
}

// HasUptime returns a boolean if a field has been set.
func (o *PipelineNameGet200Response) HasUptime() bool {
	if o != nil && !IsNil(o.Uptime) {
		return true
	}

	return false
}

// SetUptime gets a reference to the given int64 and assigns it to the Uptime field.
func (o *PipelineNameGet200Response) SetUptime(v int64) {
	o.Uptime = &v
}

// GetMemory returns the Memory field value if set, zero value otherwise.
func (o *PipelineNameGet200Response) GetMemory() int32 {
	if o == nil || IsNil(o.Memory) {
		var ret int32
		return ret
	}
	return *o.Memory
}

// GetMemoryOk returns a tuple with the Memory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PipelineNameGet200Response) GetMemoryOk() (*int32, bool) {
	if o == nil || IsNil(o.Memory) {
		return nil, false
	}
	return o.Memory, true
}

// HasMemory returns a boolean if a field has been set.
func (o *PipelineNameGet200Response) HasMemory() bool {
	if o != nil && !IsNil(o.Memory) {
		return true
	}

	return false
}

// SetMemory gets a reference to the given int32 and assigns it to the Memory field.
func (o *PipelineNameGet200Response) SetMemory(v int32) {
	o.Memory = &v
}

// GetCpu returns the Cpu field value if set, zero value otherwise.
func (o *PipelineNameGet200Response) GetCpu() int32 {
	if o == nil || IsNil(o.Cpu) {
		var ret int32
		return ret
	}
	return *o.Cpu
}

// GetCpuOk returns a tuple with the Cpu field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PipelineNameGet200Response) GetCpuOk() (*int32, bool) {
	if o == nil || IsNil(o.Cpu) {
		return nil, false
	}
	return o.Cpu, true
}

// HasCpu returns a boolean if a field has been set.
func (o *PipelineNameGet200Response) HasCpu() bool {
	if o != nil && !IsNil(o.Cpu) {
		return true
	}

	return false
}

// SetCpu gets a reference to the given int32 and assigns it to the Cpu field.
func (o *PipelineNameGet200Response) SetCpu(v int32) {
	o.Cpu = &v
}

// GetFaults returns the Faults field value if set, zero value otherwise.
func (o *PipelineNameGet200Response) GetFaults() int32 {
	if o == nil || IsNil(o.Faults) {
		var ret int32
		return ret
	}
	return *o.Faults
}

// GetFaultsOk returns a tuple with the Faults field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PipelineNameGet200Response) GetFaultsOk() (*int32, bool) {
	if o == nil || IsNil(o.Faults) {
		return nil, false
	}
	return o.Faults, true
}

// HasFaults returns a boolean if a field has been set.
func (o *PipelineNameGet200Response) HasFaults() bool {
	if o != nil && !IsNil(o.Faults) {
		return true
	}

	return false
}

// SetFaults gets a reference to the given int32 and assigns it to the Faults field.
func (o *PipelineNameGet200Response) SetFaults(v int32) {
	o.Faults = &v
}

// GetServiceName returns the ServiceName field value if set, zero value otherwise.
func (o *PipelineNameGet200Response) GetServiceName() string {
	if o == nil || IsNil(o.ServiceName) {
		var ret string
		return ret
	}
	return *o.ServiceName
}

// GetServiceNameOk returns a tuple with the ServiceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PipelineNameGet200Response) GetServiceNameOk() (*string, bool) {
	if o == nil || IsNil(o.ServiceName) {
		return nil, false
	}
	return o.ServiceName, true
}

// HasServiceName returns a boolean if a field has been set.
func (o *PipelineNameGet200Response) HasServiceName() bool {
	if o != nil && !IsNil(o.ServiceName) {
		return true
	}

	return false
}

// SetServiceName gets a reference to the given string and assigns it to the ServiceName field.
func (o *PipelineNameGet200Response) SetServiceName(v string) {
	o.ServiceName = &v
}

// GetServiceVersion returns the ServiceVersion field value if set, zero value otherwise.
func (o *PipelineNameGet200Response) GetServiceVersion() string {
	if o == nil || IsNil(o.ServiceVersion) {
		var ret string
		return ret
	}
	return *o.ServiceVersion
}

// GetServiceVersionOk returns a tuple with the ServiceVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PipelineNameGet200Response) GetServiceVersionOk() (*string, bool) {
	if o == nil || IsNil(o.ServiceVersion) {
		return nil, false
	}
	return o.ServiceVersion, true
}

// HasServiceVersion returns a boolean if a field has been set.
func (o *PipelineNameGet200Response) HasServiceVersion() bool {
	if o != nil && !IsNil(o.ServiceVersion) {
		return true
	}

	return false
}

// SetServiceVersion gets a reference to the given string and assigns it to the ServiceVersion field.
func (o *PipelineNameGet200Response) SetServiceVersion(v string) {
	o.ServiceVersion = &v
}

// GetLogs returns the Logs field value if set, zero value otherwise.
func (o *PipelineNameGet200Response) GetLogs() []string {
	if o == nil || IsNil(o.Logs) {
		var ret []string
		return ret
	}
	return o.Logs
}

// GetLogsOk returns a tuple with the Logs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PipelineNameGet200Response) GetLogsOk() ([]string, bool) {
	if o == nil || IsNil(o.Logs) {
		return nil, false
	}
	return o.Logs, true
}

// HasLogs returns a boolean if a field has been set.
func (o *PipelineNameGet200Response) HasLogs() bool {
	if o != nil && !IsNil(o.Logs) {
		return true
	}

	return false
}

// SetLogs gets a reference to the given []string and assigns it to the Logs field.
func (o *PipelineNameGet200Response) SetLogs(v []string) {
	o.Logs = v
}

func (o PipelineNameGet200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PipelineNameGet200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Pid) {
		toSerialize["pid"] = o.Pid
	}
	if !IsNil(o.Uptime) {
		toSerialize["uptime"] = o.Uptime
	}
	if !IsNil(o.Memory) {
		toSerialize["memory"] = o.Memory
	}
	if !IsNil(o.Cpu) {
		toSerialize["cpu"] = o.Cpu
	}
	if !IsNil(o.Faults) {
		toSerialize["faults"] = o.Faults
	}
	if !IsNil(o.ServiceName) {
		toSerialize["service_name"] = o.ServiceName
	}
	if !IsNil(o.ServiceVersion) {
		toSerialize["service_version"] = o.ServiceVersion
	}
	if !IsNil(o.Logs) {
		toSerialize["logs"] = o.Logs
	}
	return toSerialize, nil
}

type NullablePipelineNameGet200Response struct {
	value *PipelineNameGet200Response
	isSet bool
}

func (v NullablePipelineNameGet200Response) Get() *PipelineNameGet200Response {
	return v.value
}

func (v *NullablePipelineNameGet200Response) Set(val *PipelineNameGet200Response) {
	v.value = val
	v.isSet = true
}

func (v NullablePipelineNameGet200Response) IsSet() bool {
	return v.isSet
}

func (v *NullablePipelineNameGet200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePipelineNameGet200Response(val *PipelineNameGet200Response) *NullablePipelineNameGet200Response {
	return &NullablePipelineNameGet200Response{value: val, isSet: true}
}

func (v NullablePipelineNameGet200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePipelineNameGet200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


