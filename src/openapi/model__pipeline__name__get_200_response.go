/*
roverd REST API

API exposed from each rover to allow process, service, source and file management

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the PipelineNameGet200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PipelineNameGet200Response{}

// PipelineNameGet200Response struct for PipelineNameGet200Response
type PipelineNameGet200Response struct {
	// The name of the service running as a process
	Name string `json:"name"`
	Status ProcessStatus `json:"status"`
	// The process ID
	Pid int32 `json:"pid"`
	// The number of milliseconds the process has been running
	Uptime int64 `json:"uptime"`
	// The amount of memory used by the process in megabytes
	Memory int32 `json:"memory"`
	// The percentage of CPU used by the process
	Cpu int32 `json:"cpu"`
	// The number of faults that have occurred (causing the pipeline to restart) since last_start
	Faults int32 `json:"faults"`
	// The name of the service that this process is running
	ServiceName string `json:"service_name"`
	// The version of the service that this process is running
	ServiceVersion string `json:"service_version"`
	// The latest <log_lines> log lines of the process
	Logs []string `json:"logs,omitempty"`
}

type _PipelineNameGet200Response PipelineNameGet200Response

// NewPipelineNameGet200Response instantiates a new PipelineNameGet200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPipelineNameGet200Response(name string, status ProcessStatus, pid int32, uptime int64, memory int32, cpu int32, faults int32, serviceName string, serviceVersion string) *PipelineNameGet200Response {
	this := PipelineNameGet200Response{}
	this.Name = name
	this.Status = status
	this.Pid = pid
	this.Uptime = uptime
	this.Memory = memory
	this.Cpu = cpu
	this.Faults = faults
	this.ServiceName = serviceName
	this.ServiceVersion = serviceVersion
	return &this
}

// NewPipelineNameGet200ResponseWithDefaults instantiates a new PipelineNameGet200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPipelineNameGet200ResponseWithDefaults() *PipelineNameGet200Response {
	this := PipelineNameGet200Response{}
	return &this
}

// GetName returns the Name field value
func (o *PipelineNameGet200Response) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *PipelineNameGet200Response) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *PipelineNameGet200Response) SetName(v string) {
	o.Name = v
}

// GetStatus returns the Status field value
func (o *PipelineNameGet200Response) GetStatus() ProcessStatus {
	if o == nil {
		var ret ProcessStatus
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *PipelineNameGet200Response) GetStatusOk() (*ProcessStatus, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *PipelineNameGet200Response) SetStatus(v ProcessStatus) {
	o.Status = v
}

// GetPid returns the Pid field value
func (o *PipelineNameGet200Response) GetPid() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Pid
}

// GetPidOk returns a tuple with the Pid field value
// and a boolean to check if the value has been set.
func (o *PipelineNameGet200Response) GetPidOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Pid, true
}

// SetPid sets field value
func (o *PipelineNameGet200Response) SetPid(v int32) {
	o.Pid = v
}

// GetUptime returns the Uptime field value
func (o *PipelineNameGet200Response) GetUptime() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Uptime
}

// GetUptimeOk returns a tuple with the Uptime field value
// and a boolean to check if the value has been set.
func (o *PipelineNameGet200Response) GetUptimeOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Uptime, true
}

// SetUptime sets field value
func (o *PipelineNameGet200Response) SetUptime(v int64) {
	o.Uptime = v
}

// GetMemory returns the Memory field value
func (o *PipelineNameGet200Response) GetMemory() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Memory
}

// GetMemoryOk returns a tuple with the Memory field value
// and a boolean to check if the value has been set.
func (o *PipelineNameGet200Response) GetMemoryOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Memory, true
}

// SetMemory sets field value
func (o *PipelineNameGet200Response) SetMemory(v int32) {
	o.Memory = v
}

// GetCpu returns the Cpu field value
func (o *PipelineNameGet200Response) GetCpu() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Cpu
}

// GetCpuOk returns a tuple with the Cpu field value
// and a boolean to check if the value has been set.
func (o *PipelineNameGet200Response) GetCpuOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Cpu, true
}

// SetCpu sets field value
func (o *PipelineNameGet200Response) SetCpu(v int32) {
	o.Cpu = v
}

// GetFaults returns the Faults field value
func (o *PipelineNameGet200Response) GetFaults() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Faults
}

// GetFaultsOk returns a tuple with the Faults field value
// and a boolean to check if the value has been set.
func (o *PipelineNameGet200Response) GetFaultsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Faults, true
}

// SetFaults sets field value
func (o *PipelineNameGet200Response) SetFaults(v int32) {
	o.Faults = v
}

// GetServiceName returns the ServiceName field value
func (o *PipelineNameGet200Response) GetServiceName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServiceName
}

// GetServiceNameOk returns a tuple with the ServiceName field value
// and a boolean to check if the value has been set.
func (o *PipelineNameGet200Response) GetServiceNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServiceName, true
}

// SetServiceName sets field value
func (o *PipelineNameGet200Response) SetServiceName(v string) {
	o.ServiceName = v
}

// GetServiceVersion returns the ServiceVersion field value
func (o *PipelineNameGet200Response) GetServiceVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServiceVersion
}

// GetServiceVersionOk returns a tuple with the ServiceVersion field value
// and a boolean to check if the value has been set.
func (o *PipelineNameGet200Response) GetServiceVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServiceVersion, true
}

// SetServiceVersion sets field value
func (o *PipelineNameGet200Response) SetServiceVersion(v string) {
	o.ServiceVersion = v
}

// GetLogs returns the Logs field value if set, zero value otherwise.
func (o *PipelineNameGet200Response) GetLogs() []string {
	if o == nil || IsNil(o.Logs) {
		var ret []string
		return ret
	}
	return o.Logs
}

// GetLogsOk returns a tuple with the Logs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PipelineNameGet200Response) GetLogsOk() ([]string, bool) {
	if o == nil || IsNil(o.Logs) {
		return nil, false
	}
	return o.Logs, true
}

// HasLogs returns a boolean if a field has been set.
func (o *PipelineNameGet200Response) HasLogs() bool {
	if o != nil && !IsNil(o.Logs) {
		return true
	}

	return false
}

// SetLogs gets a reference to the given []string and assigns it to the Logs field.
func (o *PipelineNameGet200Response) SetLogs(v []string) {
	o.Logs = v
}

func (o PipelineNameGet200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PipelineNameGet200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	toSerialize["status"] = o.Status
	toSerialize["pid"] = o.Pid
	toSerialize["uptime"] = o.Uptime
	toSerialize["memory"] = o.Memory
	toSerialize["cpu"] = o.Cpu
	toSerialize["faults"] = o.Faults
	toSerialize["service_name"] = o.ServiceName
	toSerialize["service_version"] = o.ServiceVersion
	if !IsNil(o.Logs) {
		toSerialize["logs"] = o.Logs
	}
	return toSerialize, nil
}

func (o *PipelineNameGet200Response) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"status",
		"pid",
		"uptime",
		"memory",
		"cpu",
		"faults",
		"service_name",
		"service_version",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPipelineNameGet200Response := _PipelineNameGet200Response{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPipelineNameGet200Response)

	if err != nil {
		return err
	}

	*o = PipelineNameGet200Response(varPipelineNameGet200Response)

	return err
}

type NullablePipelineNameGet200Response struct {
	value *PipelineNameGet200Response
	isSet bool
}

func (v NullablePipelineNameGet200Response) Get() *PipelineNameGet200Response {
	return v.value
}

func (v *NullablePipelineNameGet200Response) Set(val *PipelineNameGet200Response) {
	v.value = val
	v.isSet = true
}

func (v NullablePipelineNameGet200Response) IsSet() bool {
	return v.isSet
}

func (v *NullablePipelineNameGet200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePipelineNameGet200Response(val *PipelineNameGet200Response) *NullablePipelineNameGet200Response {
	return &NullablePipelineNameGet200Response{value: val, isSet: true}
}

func (v NullablePipelineNameGet200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePipelineNameGet200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


